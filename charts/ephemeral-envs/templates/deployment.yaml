apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ephemeral-envs.fullname" . }}
  labels:
    {{- include "ephemeral-envs.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ephemeral-envs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ toYaml .Values.config | sha256sum }}
        {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.metrics.port }}"
        prometheus.io/path: "/metrics"
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ephemeral-envs.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ephemeral-envs.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: http-metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
            {{- end }}
          args:
            - --log-level={{ .Values.logLevel }}
            - --port=8080
            {{- if .Values.metrics.enabled }}
            - --metrics-port={{ .Values.metrics.port }}
            {{- end }}
            {{- if include "ephemeral-envs.configMapName" . }}
            - --config=/etc/ephemeral-envs/config.yaml
            {{- end }}
            {{- range .Values.extraArgs }}
            - {{ . }}
            {{- end }}
          {{- with .Values.extraEnv }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if include "ephemeral-envs.configMapName" . }}
            - name: config
              mountPath: /etc/ephemeral-envs
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      {{- if include "ephemeral-envs.configMapName" . }}
        - name: config
          configMap:
            name: {{ include "ephemeral-envs.configMapName" . }}
            items:
              - key: {{if .Values.existingConfigmap }}{{ .Values.existingConfigmapKey }}{{ else }}config.yaml{{ end }}
                path: config.yaml
      {{- end}}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range . }}
        - topologyKey: {{ .topologyKey }}
          maxSkew: {{ .maxSkew }}
          whenUnsatisfiable: {{ .whenUnsatisfiable }}
          {{- if .labelSelector }}
          labelSelector:
            {{- toYaml .labelSelector | nindent 12 }}
          {{- else }}
          labelSelector:
            matchLabels:
              {{- include "ephemeral-envs.selectorLabels" $ | nindent 14 }}
          {{- end }}
        {{- end }}
      {{- end }}
